# Download Znap, if it's not there yet.
[[ -f ~/.Git/zsh-snap/znap.zsh ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git ~/.Git/zsh-snap

# The below 5 lines gets rid of a warning when launching zsh of no such file or directory: /completions/_docker
# The error was caused by the following line in the Github repo for oh-my-zsh:
# https://github.com/ohmyzsh/ohmyzsh/blob/667fdbf7746acc90aa29b316ef711180e7917aa2/plugins/docker/docker.plugin.zsh#L60

# Set the environment variable ZSH_CACHE_DIR
export ZSH_CACHE_DIR="$HOME/.cache/zsh"
# make sure the subdirectory 'completions' exists
mkdir -p "$ZSH_CACHE_DIR/completions"

source ~/.Git/zsh-snap/znap.zsh  # Start Znap

# OS-specific PATH additions
if [[ -f /etc/os-release ]]; then
    # Read the ID field
    local os_id=$(grep -Po "(?<=^ID=).*" /etc/os-release | tr -d '"')

    # Check if ID is exactly 'debian'
    # This will include pure Debian and Proxmox (which identifies as ID=debian)
    # It will explicitly exclude Ubuntu (which identifies as ID=ubuntu)
    if [[ "$os_id" == "debian" ]]; then
        export PATH="$PATH:/usr/sbin:/usr/local/sbin"
    fi
fi


# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/docker#settings
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# zsh-autosuggestions plugin configuration
# https://github.com/zsh-users/zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#00af87"

# ssh-agent plugin configuration
# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/ssh-agent
zstyle :omz:plugins:ssh-agent lazy yes
zstyle :omz:plugins:ssh-agent lifetime 1h
zstyle :omz:plugins:ssh-agent quiet yes

# `znap source` automatically downloads and starts your plugins.
znap source marlonrichert/zsh-autocomplete
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-syntax-highlighting
znap source romkatv/powerlevel10k
znap source ohmyzsh/ohmyzsh lib/git.zsh plugins/{docker,docker-compose,git,ssh-agent,sudo}


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# ZSH History Options
# share history across multiple zsh sessions
# setopt SHARE_HISTORY
# save history but don't always read history file
# history can be manually read in from other terminals with the command `fc -RI`
# history can be manually saved to other terminals with the command `fc -AI`
setopt INC_APPEND_HISTORY_TIME
# append to history
setopt APPEND_HISTORY
# removes blank lines from history
setopt HIST_REDUCE_BLANKS
# remove older duplicates
setopt HIST_IGNORE_ALL_DUPS

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=900

# Autocomplete for pipx
znap function _python_argcomplete pipx 'eval "$( register-python-argcomplete pipx  )"'
complete -o nospace -o default -o bashdefault -F _python_argcomplete pipx

# Use premcd to set the title of the terminal window to include the current directory
# Use preexec to set the title of the terminal window to include both the current directory and the command being executed
# if there is a ssh connection, include the hostname in the title
add-zsh-hook precmd set-title-precmd
add-zsh-hook preexec set-title-preexec

set-title-precmd() {
  local title
  # get the last 2 directories of the current path
  local dir=$(print -P "%2~")
  # if the current directory is 3 or more directories deep, replace the middle directories with ".../" and leave the last 2 directories
  title=$(print -P "%(3~*.../$dir*$dir)")
  # add the ssh hostname to the title if there is a ssh connection
  if [[ -n "$SSH_CONNECTION" ]]; then
    title="$(hostname)@$title"
  fi
  echo -ne "\033]0;$title\007"
}

set-title-preexec() {
  local title
  # get the last 2 directories of the current path and the command being executed
  local dir=$(print -P "%2~ - ${1[(w)1]}")
  # if the current directory is 3 or more directories deep, replace the middle directories with ".../" and leave the last 2 directories
  title=$(print -P "%(3~*.../$dir*$dir)")
  if [[ -n "$SSH_CONNECTION" ]]; then
    title="$(hostname)@$title"
  fi
  echo -ne "\033]0;$title\007"
}


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
